                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Nov 10 2006)
                              4 ; This file generated Wed Jan 23 16:41:20 2008
                              5 ;--------------------------------------------------------
                              6 	.module board_specific
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _set_sleep_bits_PARM_2
                             13 	.globl _init_board
                             14 	.globl _write_both_9862s
                             15 	.globl _write_9862
                             16 	.globl _set_sleep_bits
                             17 	.globl _la_trace_init
                             18 	.globl _bitALTERA_DCLK
                             19 	.globl _bitALTERA_DATA0
                             20 	.globl _bitS_IN
                             21 	.globl _bitS_OUT
                             22 	.globl _bitS_CLK
                             23 	.globl _EIPX6
                             24 	.globl _EIPX5
                             25 	.globl _EIPX4
                             26 	.globl _PI2C
                             27 	.globl _PUSB
                             28 	.globl _EIEX6
                             29 	.globl _EIEX5
                             30 	.globl _EIEX4
                             31 	.globl _EI2C
                             32 	.globl _EIUSB
                             33 	.globl _SMOD1
                             34 	.globl _ERESI
                             35 	.globl _RESI
                             36 	.globl _INT6
                             37 	.globl _CY
                             38 	.globl _AC
                             39 	.globl _F0
                             40 	.globl _RS1
                             41 	.globl _RS0
                             42 	.globl _OV
                             43 	.globl _FL
                             44 	.globl _P
                             45 	.globl _TF2
                             46 	.globl _EXF2
                             47 	.globl _RCLK
                             48 	.globl _TCLK
                             49 	.globl _EXEN2
                             50 	.globl _TR2
                             51 	.globl _C_T2
                             52 	.globl _CP_RL2
                             53 	.globl _SM01
                             54 	.globl _SM11
                             55 	.globl _SM21
                             56 	.globl _REN1
                             57 	.globl _TB81
                             58 	.globl _RB81
                             59 	.globl _TI1
                             60 	.globl _RI1
                             61 	.globl _PS1
                             62 	.globl _PT2
                             63 	.globl _PS0
                             64 	.globl _PT1
                             65 	.globl _PX1
                             66 	.globl _PT0
                             67 	.globl _PX0
                             68 	.globl _EA
                             69 	.globl _ES1
                             70 	.globl _ET2
                             71 	.globl _ES0
                             72 	.globl _ET1
                             73 	.globl _EX1
                             74 	.globl _ET0
                             75 	.globl _EX0
                             76 	.globl _SM0
                             77 	.globl _SM1
                             78 	.globl _SM2
                             79 	.globl _REN
                             80 	.globl _TB8
                             81 	.globl _RB8
                             82 	.globl _TI
                             83 	.globl _RI
                             84 	.globl _TF1
                             85 	.globl _TR1
                             86 	.globl _TF0
                             87 	.globl _TR0
                             88 	.globl _IE1
                             89 	.globl _IT1
                             90 	.globl _IE0
                             91 	.globl _IT0
                             92 	.globl _SEL
                             93 	.globl _EIP
                             94 	.globl _B
                             95 	.globl _EIE
                             96 	.globl _ACC
                             97 	.globl _EICON
                             98 	.globl _PSW
                             99 	.globl _TH2
                            100 	.globl _TL2
                            101 	.globl _RCAP2H
                            102 	.globl _RCAP2L
                            103 	.globl _T2CON
                            104 	.globl _SBUF1
                            105 	.globl _SCON1
                            106 	.globl _GPIFSGLDATLNOX
                            107 	.globl _GPIFSGLDATLX
                            108 	.globl _GPIFSGLDATH
                            109 	.globl _GPIFTRIG
                            110 	.globl _EP01STAT
                            111 	.globl _IP
                            112 	.globl _OEE
                            113 	.globl _OED
                            114 	.globl _OEC
                            115 	.globl _OEB
                            116 	.globl _OEA
                            117 	.globl _IOE
                            118 	.globl _IOD
                            119 	.globl _AUTOPTRSETUP
                            120 	.globl _EP68FIFOFLGS
                            121 	.globl _EP24FIFOFLGS
                            122 	.globl _EP2468STAT
                            123 	.globl _IE
                            124 	.globl _INT4CLR
                            125 	.globl _INT2CLR
                            126 	.globl _IOC
                            127 	.globl _AUTODAT2
                            128 	.globl _AUTOPTRL2
                            129 	.globl _AUTOPTRH2
                            130 	.globl _AUTODAT1
                            131 	.globl _APTR1L
                            132 	.globl _APTR1H
                            133 	.globl _SBUF0
                            134 	.globl _SCON0
                            135 	.globl _MPAGE
                            136 	.globl _EXIF
                            137 	.globl _IOB
                            138 	.globl _CKCON
                            139 	.globl _TH1
                            140 	.globl _TH0
                            141 	.globl _TL1
                            142 	.globl _TL0
                            143 	.globl _TMOD
                            144 	.globl _TCON
                            145 	.globl _PCON
                            146 	.globl _DPS
                            147 	.globl _DPH1
                            148 	.globl _DPL1
                            149 	.globl _DPH
                            150 	.globl _DPL
                            151 	.globl _SP
                            152 	.globl _IOA
                            153 	.globl _EP8FIFOBUF
                            154 	.globl _EP6FIFOBUF
                            155 	.globl _EP4FIFOBUF
                            156 	.globl _EP2FIFOBUF
                            157 	.globl _EP1INBUF
                            158 	.globl _EP1OUTBUF
                            159 	.globl _EP0BUF
                            160 	.globl _CT4
                            161 	.globl _CT3
                            162 	.globl _CT2
                            163 	.globl _CT1
                            164 	.globl _USBTEST
                            165 	.globl _TESTCFG
                            166 	.globl _DBUG
                            167 	.globl _UDMACRCQUAL
                            168 	.globl _UDMACRCL
                            169 	.globl _UDMACRCH
                            170 	.globl _GPIFHOLDAMOUNT
                            171 	.globl _FLOWSTBHPERIOD
                            172 	.globl _FLOWSTBEDGE
                            173 	.globl _FLOWSTB
                            174 	.globl _FLOWHOLDOFF
                            175 	.globl _FLOWEQ1CTL
                            176 	.globl _FLOWEQ0CTL
                            177 	.globl _FLOWLOGIC
                            178 	.globl _FLOWSTATE
                            179 	.globl _GPIFABORT
                            180 	.globl _GPIFREADYSTAT
                            181 	.globl _GPIFREADYCFG
                            182 	.globl _XGPIFSGLDATLNOX
                            183 	.globl _XGPIFSGLDATLX
                            184 	.globl _XGPIFSGLDATH
                            185 	.globl _EP8GPIFTRIG
                            186 	.globl _EP8GPIFPFSTOP
                            187 	.globl _EP8GPIFFLGSEL
                            188 	.globl _EP6GPIFTRIG
                            189 	.globl _EP6GPIFPFSTOP
                            190 	.globl _EP6GPIFFLGSEL
                            191 	.globl _EP4GPIFTRIG
                            192 	.globl _EP4GPIFPFSTOP
                            193 	.globl _EP4GPIFFLGSEL
                            194 	.globl _EP2GPIFTRIG
                            195 	.globl _EP2GPIFPFSTOP
                            196 	.globl _EP2GPIFFLGSEL
                            197 	.globl _GPIFTCB0
                            198 	.globl _GPIFTCB1
                            199 	.globl _GPIFTCB2
                            200 	.globl _GPIFTCB3
                            201 	.globl _GPIFADRL
                            202 	.globl _GPIFADRH
                            203 	.globl _GPIFCTLCFG
                            204 	.globl _GPIFIDLECTL
                            205 	.globl _GPIFIDLECS
                            206 	.globl _GPIFWFSELECT
                            207 	.globl _SETUPDAT
                            208 	.globl _SUDPTRCTL
                            209 	.globl _SUDPTRL
                            210 	.globl _SUDPTRH
                            211 	.globl _EP8FIFOBCL
                            212 	.globl _EP8FIFOBCH
                            213 	.globl _EP6FIFOBCL
                            214 	.globl _EP6FIFOBCH
                            215 	.globl _EP4FIFOBCL
                            216 	.globl _EP4FIFOBCH
                            217 	.globl _EP2FIFOBCL
                            218 	.globl _EP2FIFOBCH
                            219 	.globl _EP8FIFOFLGS
                            220 	.globl _EP6FIFOFLGS
                            221 	.globl _EP4FIFOFLGS
                            222 	.globl _EP2FIFOFLGS
                            223 	.globl _EP8CS
                            224 	.globl _EP6CS
                            225 	.globl _EP4CS
                            226 	.globl _EP2CS
                            227 	.globl _EP1INCS
                            228 	.globl _EP1OUTCS
                            229 	.globl _EP0CS
                            230 	.globl _EP8BCL
                            231 	.globl _EP8BCH
                            232 	.globl _EP6BCL
                            233 	.globl _EP6BCH
                            234 	.globl _EP4BCL
                            235 	.globl _EP4BCH
                            236 	.globl _EP2BCL
                            237 	.globl _EP2BCH
                            238 	.globl _EP1INBC
                            239 	.globl _EP1OUTBC
                            240 	.globl _EP0BCL
                            241 	.globl _EP0BCH
                            242 	.globl _FNADDR
                            243 	.globl _MICROFRAME
                            244 	.globl _USBFRAMEL
                            245 	.globl _USBFRAMEH
                            246 	.globl _TOGCTL
                            247 	.globl _WAKEUPCS
                            248 	.globl _SUSPEND
                            249 	.globl _USBCS
                            250 	.globl _XAUTODAT2
                            251 	.globl _XAUTODAT1
                            252 	.globl _I2CTL
                            253 	.globl _I2DAT
                            254 	.globl _I2CS
                            255 	.globl _PORTECFG
                            256 	.globl _PORTCCFG
                            257 	.globl _PORTACFG
                            258 	.globl _INTSETUP
                            259 	.globl _INT4IVEC
                            260 	.globl _INT2IVEC
                            261 	.globl _CLRERRCNT
                            262 	.globl _ERRCNTLIM
                            263 	.globl _USBERRIRQ
                            264 	.globl _USBERRIE
                            265 	.globl _GPIFIRQ
                            266 	.globl _GPIFIE
                            267 	.globl _EPIRQ
                            268 	.globl _EPIE
                            269 	.globl _USBIRQ
                            270 	.globl _USBIE
                            271 	.globl _NAKIRQ
                            272 	.globl _NAKIE
                            273 	.globl _IBNIRQ
                            274 	.globl _IBNIE
                            275 	.globl _EP8FIFOIRQ
                            276 	.globl _EP8FIFOIE
                            277 	.globl _EP6FIFOIRQ
                            278 	.globl _EP6FIFOIE
                            279 	.globl _EP4FIFOIRQ
                            280 	.globl _EP4FIFOIE
                            281 	.globl _EP2FIFOIRQ
                            282 	.globl _EP2FIFOIE
                            283 	.globl _OUTPKTEND
                            284 	.globl _INPKTEND
                            285 	.globl _EP8ISOINPKTS
                            286 	.globl _EP6ISOINPKTS
                            287 	.globl _EP4ISOINPKTS
                            288 	.globl _EP2ISOINPKTS
                            289 	.globl _EP8FIFOPFL
                            290 	.globl _EP8FIFOPFH
                            291 	.globl _EP6FIFOPFL
                            292 	.globl _EP6FIFOPFH
                            293 	.globl _EP4FIFOPFL
                            294 	.globl _EP4FIFOPFH
                            295 	.globl _EP2FIFOPFL
                            296 	.globl _EP2FIFOPFH
                            297 	.globl _EP8AUTOINLENL
                            298 	.globl _EP8AUTOINLENH
                            299 	.globl _EP6AUTOINLENL
                            300 	.globl _EP6AUTOINLENH
                            301 	.globl _EP4AUTOINLENL
                            302 	.globl _EP4AUTOINLENH
                            303 	.globl _EP2AUTOINLENL
                            304 	.globl _EP2AUTOINLENH
                            305 	.globl _EP8FIFOCFG
                            306 	.globl _EP6FIFOCFG
                            307 	.globl _EP4FIFOCFG
                            308 	.globl _EP2FIFOCFG
                            309 	.globl _EP8CFG
                            310 	.globl _EP6CFG
                            311 	.globl _EP4CFG
                            312 	.globl _EP2CFG
                            313 	.globl _EP1INCFG
                            314 	.globl _EP1OUTCFG
                            315 	.globl _REVCTL
                            316 	.globl _REVID
                            317 	.globl _FIFOPINPOLAR
                            318 	.globl _UART230
                            319 	.globl _BPADDRL
                            320 	.globl _BPADDRH
                            321 	.globl _BREAKPT
                            322 	.globl _FIFORESET
                            323 	.globl _PINFLAGSCD
                            324 	.globl _PINFLAGSAB
                            325 	.globl _IFCONFIG
                            326 	.globl _CPUCS
                            327 	.globl _RES_WAVEDATA_END
                            328 	.globl _GPIF_WAVE_DATA
                            329 	.globl _write_both_9862s_PARM_2
                            330 	.globl _write_9862_PARM_3
                            331 	.globl _write_9862_PARM_2
                            332 	.globl _set_led_0
                            333 	.globl _set_led_1
                            334 	.globl _toggle_led_0
                            335 	.globl _toggle_led_1
                            336 ;--------------------------------------------------------
                            337 ; special function registers
                            338 ;--------------------------------------------------------
                            339 	.area RSEG    (DATA)
                    0080    340 _IOA	=	0x0080
                    0081    341 _SP	=	0x0081
                    0082    342 _DPL	=	0x0082
                    0083    343 _DPH	=	0x0083
                    0084    344 _DPL1	=	0x0084
                    0085    345 _DPH1	=	0x0085
                    0086    346 _DPS	=	0x0086
                    0087    347 _PCON	=	0x0087
                    0088    348 _TCON	=	0x0088
                    0089    349 _TMOD	=	0x0089
                    008A    350 _TL0	=	0x008a
                    008B    351 _TL1	=	0x008b
                    008C    352 _TH0	=	0x008c
                    008D    353 _TH1	=	0x008d
                    008E    354 _CKCON	=	0x008e
                    0090    355 _IOB	=	0x0090
                    0091    356 _EXIF	=	0x0091
                    0092    357 _MPAGE	=	0x0092
                    0098    358 _SCON0	=	0x0098
                    0099    359 _SBUF0	=	0x0099
                    009A    360 _APTR1H	=	0x009a
                    009B    361 _APTR1L	=	0x009b
                    009C    362 _AUTODAT1	=	0x009c
                    009D    363 _AUTOPTRH2	=	0x009d
                    009E    364 _AUTOPTRL2	=	0x009e
                    009F    365 _AUTODAT2	=	0x009f
                    00A0    366 _IOC	=	0x00a0
                    00A1    367 _INT2CLR	=	0x00a1
                    00A2    368 _INT4CLR	=	0x00a2
                    00A8    369 _IE	=	0x00a8
                    00AA    370 _EP2468STAT	=	0x00aa
                    00AB    371 _EP24FIFOFLGS	=	0x00ab
                    00AC    372 _EP68FIFOFLGS	=	0x00ac
                    00AF    373 _AUTOPTRSETUP	=	0x00af
                    00B0    374 _IOD	=	0x00b0
                    00B1    375 _IOE	=	0x00b1
                    00B2    376 _OEA	=	0x00b2
                    00B3    377 _OEB	=	0x00b3
                    00B4    378 _OEC	=	0x00b4
                    00B5    379 _OED	=	0x00b5
                    00B6    380 _OEE	=	0x00b6
                    00B8    381 _IP	=	0x00b8
                    00BA    382 _EP01STAT	=	0x00ba
                    00BB    383 _GPIFTRIG	=	0x00bb
                    00BD    384 _GPIFSGLDATH	=	0x00bd
                    00BE    385 _GPIFSGLDATLX	=	0x00be
                    00BF    386 _GPIFSGLDATLNOX	=	0x00bf
                    00C0    387 _SCON1	=	0x00c0
                    00C1    388 _SBUF1	=	0x00c1
                    00C8    389 _T2CON	=	0x00c8
                    00CA    390 _RCAP2L	=	0x00ca
                    00CB    391 _RCAP2H	=	0x00cb
                    00CC    392 _TL2	=	0x00cc
                    00CD    393 _TH2	=	0x00cd
                    00D0    394 _PSW	=	0x00d0
                    00D8    395 _EICON	=	0x00d8
                    00E0    396 _ACC	=	0x00e0
                    00E8    397 _EIE	=	0x00e8
                    00F0    398 _B	=	0x00f0
                    00F8    399 _EIP	=	0x00f8
                            400 ;--------------------------------------------------------
                            401 ; special function bits
                            402 ;--------------------------------------------------------
                            403 	.area RSEG    (DATA)
                    0086    404 _SEL	=	0x0086
                    0088    405 _IT0	=	0x0088
                    0089    406 _IE0	=	0x0089
                    008A    407 _IT1	=	0x008a
                    008B    408 _IE1	=	0x008b
                    008C    409 _TR0	=	0x008c
                    008D    410 _TF0	=	0x008d
                    008E    411 _TR1	=	0x008e
                    008F    412 _TF1	=	0x008f
                    0098    413 _RI	=	0x0098
                    0099    414 _TI	=	0x0099
                    009A    415 _RB8	=	0x009a
                    009B    416 _TB8	=	0x009b
                    009C    417 _REN	=	0x009c
                    009D    418 _SM2	=	0x009d
                    009E    419 _SM1	=	0x009e
                    009F    420 _SM0	=	0x009f
                    00A8    421 _EX0	=	0x00a8
                    00A9    422 _ET0	=	0x00a9
                    00AA    423 _EX1	=	0x00aa
                    00AB    424 _ET1	=	0x00ab
                    00AC    425 _ES0	=	0x00ac
                    00AD    426 _ET2	=	0x00ad
                    00AE    427 _ES1	=	0x00ae
                    00AF    428 _EA	=	0x00af
                    00B8    429 _PX0	=	0x00b8
                    00B9    430 _PT0	=	0x00b9
                    00BA    431 _PX1	=	0x00ba
                    00BB    432 _PT1	=	0x00bb
                    00BC    433 _PS0	=	0x00bc
                    00BD    434 _PT2	=	0x00bd
                    00BE    435 _PS1	=	0x00be
                    00C0    436 _RI1	=	0x00c0
                    00C1    437 _TI1	=	0x00c1
                    00C2    438 _RB81	=	0x00c2
                    00C3    439 _TB81	=	0x00c3
                    00C4    440 _REN1	=	0x00c4
                    00C5    441 _SM21	=	0x00c5
                    00C6    442 _SM11	=	0x00c6
                    00C7    443 _SM01	=	0x00c7
                    00C8    444 _CP_RL2	=	0x00c8
                    00C9    445 _C_T2	=	0x00c9
                    00CA    446 _TR2	=	0x00ca
                    00CB    447 _EXEN2	=	0x00cb
                    00CC    448 _TCLK	=	0x00cc
                    00CD    449 _RCLK	=	0x00cd
                    00CE    450 _EXF2	=	0x00ce
                    00CF    451 _TF2	=	0x00cf
                    00D0    452 _P	=	0x00d0
                    00D1    453 _FL	=	0x00d1
                    00D2    454 _OV	=	0x00d2
                    00D3    455 _RS0	=	0x00d3
                    00D4    456 _RS1	=	0x00d4
                    00D5    457 _F0	=	0x00d5
                    00D6    458 _AC	=	0x00d6
                    00D7    459 _CY	=	0x00d7
                    00DB    460 _INT6	=	0x00db
                    00DC    461 _RESI	=	0x00dc
                    00DD    462 _ERESI	=	0x00dd
                    00DF    463 _SMOD1	=	0x00df
                    00E8    464 _EIUSB	=	0x00e8
                    00E9    465 _EI2C	=	0x00e9
                    00EA    466 _EIEX4	=	0x00ea
                    00EB    467 _EIEX5	=	0x00eb
                    00EC    468 _EIEX6	=	0x00ec
                    00F8    469 _PUSB	=	0x00f8
                    00F9    470 _PI2C	=	0x00f9
                    00FA    471 _EIPX4	=	0x00fa
                    00FB    472 _EIPX5	=	0x00fb
                    00FC    473 _EIPX6	=	0x00fc
                    0080    474 _bitS_CLK	=	0x0080
                    0081    475 _bitS_OUT	=	0x0081
                    0082    476 _bitS_IN	=	0x0082
                    00A1    477 _bitALTERA_DATA0	=	0x00a1
                    00A3    478 _bitALTERA_DCLK	=	0x00a3
                            479 ;--------------------------------------------------------
                            480 ; overlayable register banks
                            481 ;--------------------------------------------------------
                            482 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     483 	.ds 8
                            484 ;--------------------------------------------------------
                            485 ; internal ram data
                            486 ;--------------------------------------------------------
                            487 	.area DSEG    (DATA)
   0000                     488 _write_9862_PARM_2:
   0000                     489 	.ds 1
   0001                     490 _write_9862_PARM_3:
   0001                     491 	.ds 1
   0002                     492 _write_both_9862s_PARM_2:
   0002                     493 	.ds 1
                            494 ;--------------------------------------------------------
                            495 ; overlayable items in internal ram 
                            496 ;--------------------------------------------------------
                            497 	.area	OSEG    (OVR,DATA)
                            498 	.area	OSEG    (OVR,DATA)
                            499 	.area	OSEG    (OVR,DATA)
   0000                     500 _set_sleep_bits_PARM_2::
   0000                     501 	.ds 1
                            502 ;--------------------------------------------------------
                            503 ; indirectly addressable internal ram data
                            504 ;--------------------------------------------------------
                            505 	.area ISEG    (DATA)
                            506 ;--------------------------------------------------------
                            507 ; bit data
                            508 ;--------------------------------------------------------
                            509 	.area BSEG    (BIT)
                            510 ;--------------------------------------------------------
                            511 ; paged external ram data
                            512 ;--------------------------------------------------------
                            513 	.area PSEG    (PAG,XDATA)
                            514 ;--------------------------------------------------------
                            515 ; external ram data
                            516 ;--------------------------------------------------------
                            517 	.area XSEG    (XDATA)
                    E400    518 _GPIF_WAVE_DATA	=	0xe400
                    E480    519 _RES_WAVEDATA_END	=	0xe480
                    E600    520 _CPUCS	=	0xe600
                    E601    521 _IFCONFIG	=	0xe601
                    E602    522 _PINFLAGSAB	=	0xe602
                    E603    523 _PINFLAGSCD	=	0xe603
                    E604    524 _FIFORESET	=	0xe604
                    E605    525 _BREAKPT	=	0xe605
                    E606    526 _BPADDRH	=	0xe606
                    E607    527 _BPADDRL	=	0xe607
                    E608    528 _UART230	=	0xe608
                    E609    529 _FIFOPINPOLAR	=	0xe609
                    E60A    530 _REVID	=	0xe60a
                    E60B    531 _REVCTL	=	0xe60b
                    E610    532 _EP1OUTCFG	=	0xe610
                    E611    533 _EP1INCFG	=	0xe611
                    E612    534 _EP2CFG	=	0xe612
                    E613    535 _EP4CFG	=	0xe613
                    E614    536 _EP6CFG	=	0xe614
                    E615    537 _EP8CFG	=	0xe615
                    E618    538 _EP2FIFOCFG	=	0xe618
                    E619    539 _EP4FIFOCFG	=	0xe619
                    E61A    540 _EP6FIFOCFG	=	0xe61a
                    E61B    541 _EP8FIFOCFG	=	0xe61b
                    E620    542 _EP2AUTOINLENH	=	0xe620
                    E621    543 _EP2AUTOINLENL	=	0xe621
                    E622    544 _EP4AUTOINLENH	=	0xe622
                    E623    545 _EP4AUTOINLENL	=	0xe623
                    E624    546 _EP6AUTOINLENH	=	0xe624
                    E625    547 _EP6AUTOINLENL	=	0xe625
                    E626    548 _EP8AUTOINLENH	=	0xe626
                    E627    549 _EP8AUTOINLENL	=	0xe627
                    E630    550 _EP2FIFOPFH	=	0xe630
                    E631    551 _EP2FIFOPFL	=	0xe631
                    E632    552 _EP4FIFOPFH	=	0xe632
                    E633    553 _EP4FIFOPFL	=	0xe633
                    E634    554 _EP6FIFOPFH	=	0xe634
                    E635    555 _EP6FIFOPFL	=	0xe635
                    E636    556 _EP8FIFOPFH	=	0xe636
                    E637    557 _EP8FIFOPFL	=	0xe637
                    E640    558 _EP2ISOINPKTS	=	0xe640
                    E641    559 _EP4ISOINPKTS	=	0xe641
                    E642    560 _EP6ISOINPKTS	=	0xe642
                    E643    561 _EP8ISOINPKTS	=	0xe643
                    E648    562 _INPKTEND	=	0xe648
                    E649    563 _OUTPKTEND	=	0xe649
                    E650    564 _EP2FIFOIE	=	0xe650
                    E651    565 _EP2FIFOIRQ	=	0xe651
                    E652    566 _EP4FIFOIE	=	0xe652
                    E653    567 _EP4FIFOIRQ	=	0xe653
                    E654    568 _EP6FIFOIE	=	0xe654
                    E655    569 _EP6FIFOIRQ	=	0xe655
                    E656    570 _EP8FIFOIE	=	0xe656
                    E657    571 _EP8FIFOIRQ	=	0xe657
                    E658    572 _IBNIE	=	0xe658
                    E659    573 _IBNIRQ	=	0xe659
                    E65A    574 _NAKIE	=	0xe65a
                    E65B    575 _NAKIRQ	=	0xe65b
                    E65C    576 _USBIE	=	0xe65c
                    E65D    577 _USBIRQ	=	0xe65d
                    E65E    578 _EPIE	=	0xe65e
                    E65F    579 _EPIRQ	=	0xe65f
                    E660    580 _GPIFIE	=	0xe660
                    E661    581 _GPIFIRQ	=	0xe661
                    E662    582 _USBERRIE	=	0xe662
                    E663    583 _USBERRIRQ	=	0xe663
                    E664    584 _ERRCNTLIM	=	0xe664
                    E665    585 _CLRERRCNT	=	0xe665
                    E666    586 _INT2IVEC	=	0xe666
                    E667    587 _INT4IVEC	=	0xe667
                    E668    588 _INTSETUP	=	0xe668
                    E670    589 _PORTACFG	=	0xe670
                    E671    590 _PORTCCFG	=	0xe671
                    E672    591 _PORTECFG	=	0xe672
                    E678    592 _I2CS	=	0xe678
                    E679    593 _I2DAT	=	0xe679
                    E67A    594 _I2CTL	=	0xe67a
                    E67B    595 _XAUTODAT1	=	0xe67b
                    E67C    596 _XAUTODAT2	=	0xe67c
                    E680    597 _USBCS	=	0xe680
                    E681    598 _SUSPEND	=	0xe681
                    E682    599 _WAKEUPCS	=	0xe682
                    E683    600 _TOGCTL	=	0xe683
                    E684    601 _USBFRAMEH	=	0xe684
                    E685    602 _USBFRAMEL	=	0xe685
                    E686    603 _MICROFRAME	=	0xe686
                    E687    604 _FNADDR	=	0xe687
                    E68A    605 _EP0BCH	=	0xe68a
                    E68B    606 _EP0BCL	=	0xe68b
                    E68D    607 _EP1OUTBC	=	0xe68d
                    E68F    608 _EP1INBC	=	0xe68f
                    E690    609 _EP2BCH	=	0xe690
                    E691    610 _EP2BCL	=	0xe691
                    E694    611 _EP4BCH	=	0xe694
                    E695    612 _EP4BCL	=	0xe695
                    E698    613 _EP6BCH	=	0xe698
                    E699    614 _EP6BCL	=	0xe699
                    E69C    615 _EP8BCH	=	0xe69c
                    E69D    616 _EP8BCL	=	0xe69d
                    E6A0    617 _EP0CS	=	0xe6a0
                    E6A1    618 _EP1OUTCS	=	0xe6a1
                    E6A2    619 _EP1INCS	=	0xe6a2
                    E6A3    620 _EP2CS	=	0xe6a3
                    E6A4    621 _EP4CS	=	0xe6a4
                    E6A5    622 _EP6CS	=	0xe6a5
                    E6A6    623 _EP8CS	=	0xe6a6
                    E6A7    624 _EP2FIFOFLGS	=	0xe6a7
                    E6A8    625 _EP4FIFOFLGS	=	0xe6a8
                    E6A9    626 _EP6FIFOFLGS	=	0xe6a9
                    E6AA    627 _EP8FIFOFLGS	=	0xe6aa
                    E6AB    628 _EP2FIFOBCH	=	0xe6ab
                    E6AC    629 _EP2FIFOBCL	=	0xe6ac
                    E6AD    630 _EP4FIFOBCH	=	0xe6ad
                    E6AE    631 _EP4FIFOBCL	=	0xe6ae
                    E6AF    632 _EP6FIFOBCH	=	0xe6af
                    E6B0    633 _EP6FIFOBCL	=	0xe6b0
                    E6B1    634 _EP8FIFOBCH	=	0xe6b1
                    E6B2    635 _EP8FIFOBCL	=	0xe6b2
                    E6B3    636 _SUDPTRH	=	0xe6b3
                    E6B4    637 _SUDPTRL	=	0xe6b4
                    E6B5    638 _SUDPTRCTL	=	0xe6b5
                    E6B8    639 _SETUPDAT	=	0xe6b8
                    E6C0    640 _GPIFWFSELECT	=	0xe6c0
                    E6C1    641 _GPIFIDLECS	=	0xe6c1
                    E6C2    642 _GPIFIDLECTL	=	0xe6c2
                    E6C3    643 _GPIFCTLCFG	=	0xe6c3
                    E6C4    644 _GPIFADRH	=	0xe6c4
                    E6C5    645 _GPIFADRL	=	0xe6c5
                    E6CE    646 _GPIFTCB3	=	0xe6ce
                    E6CF    647 _GPIFTCB2	=	0xe6cf
                    E6D0    648 _GPIFTCB1	=	0xe6d0
                    E6D1    649 _GPIFTCB0	=	0xe6d1
                    E6D2    650 _EP2GPIFFLGSEL	=	0xe6d2
                    E6D3    651 _EP2GPIFPFSTOP	=	0xe6d3
                    E6D4    652 _EP2GPIFTRIG	=	0xe6d4
                    E6DA    653 _EP4GPIFFLGSEL	=	0xe6da
                    E6DB    654 _EP4GPIFPFSTOP	=	0xe6db
                    E6DC    655 _EP4GPIFTRIG	=	0xe6dc
                    E6E2    656 _EP6GPIFFLGSEL	=	0xe6e2
                    E6E3    657 _EP6GPIFPFSTOP	=	0xe6e3
                    E6E4    658 _EP6GPIFTRIG	=	0xe6e4
                    E6EA    659 _EP8GPIFFLGSEL	=	0xe6ea
                    E6EB    660 _EP8GPIFPFSTOP	=	0xe6eb
                    E6EC    661 _EP8GPIFTRIG	=	0xe6ec
                    E6F0    662 _XGPIFSGLDATH	=	0xe6f0
                    E6F1    663 _XGPIFSGLDATLX	=	0xe6f1
                    E6F2    664 _XGPIFSGLDATLNOX	=	0xe6f2
                    E6F3    665 _GPIFREADYCFG	=	0xe6f3
                    E6F4    666 _GPIFREADYSTAT	=	0xe6f4
                    E6F5    667 _GPIFABORT	=	0xe6f5
                    E6C6    668 _FLOWSTATE	=	0xe6c6
                    E6C7    669 _FLOWLOGIC	=	0xe6c7
                    E6C8    670 _FLOWEQ0CTL	=	0xe6c8
                    E6C9    671 _FLOWEQ1CTL	=	0xe6c9
                    E6CA    672 _FLOWHOLDOFF	=	0xe6ca
                    E6CB    673 _FLOWSTB	=	0xe6cb
                    E6CC    674 _FLOWSTBEDGE	=	0xe6cc
                    E6CD    675 _FLOWSTBHPERIOD	=	0xe6cd
                    E60C    676 _GPIFHOLDAMOUNT	=	0xe60c
                    E67D    677 _UDMACRCH	=	0xe67d
                    E67E    678 _UDMACRCL	=	0xe67e
                    E67F    679 _UDMACRCQUAL	=	0xe67f
                    E6F8    680 _DBUG	=	0xe6f8
                    E6F9    681 _TESTCFG	=	0xe6f9
                    E6FA    682 _USBTEST	=	0xe6fa
                    E6FB    683 _CT1	=	0xe6fb
                    E6FC    684 _CT2	=	0xe6fc
                    E6FD    685 _CT3	=	0xe6fd
                    E6FE    686 _CT4	=	0xe6fe
                    E740    687 _EP0BUF	=	0xe740
                    E780    688 _EP1OUTBUF	=	0xe780
                    E7C0    689 _EP1INBUF	=	0xe7c0
                    F000    690 _EP2FIFOBUF	=	0xf000
                    F400    691 _EP4FIFOBUF	=	0xf400
                    F800    692 _EP6FIFOBUF	=	0xf800
                    FC00    693 _EP8FIFOBUF	=	0xfc00
   0000                     694 _xbuf:
   0000                     695 	.ds 1
                            696 ;--------------------------------------------------------
                            697 ; external initialized ram data
                            698 ;--------------------------------------------------------
                            699 	.area HOME    (CODE)
                            700 	.area GSINIT0 (CODE)
                            701 	.area GSINIT1 (CODE)
                            702 	.area GSINIT2 (CODE)
                            703 	.area GSINIT3 (CODE)
                            704 	.area GSINIT4 (CODE)
                            705 	.area GSINIT5 (CODE)
                            706 	.area GSINIT  (CODE)
                            707 	.area GSFINAL (CODE)
                            708 	.area CSEG    (CODE)
                            709 ;--------------------------------------------------------
                            710 ; global & static initialisations
                            711 ;--------------------------------------------------------
                            712 	.area HOME    (CODE)
                            713 	.area GSINIT  (CODE)
                            714 	.area GSFINAL (CODE)
                            715 	.area GSINIT  (CODE)
                            716 ;--------------------------------------------------------
                            717 ; Home
                            718 ;--------------------------------------------------------
                            719 	.area HOME    (CODE)
                            720 	.area CSEG    (CODE)
                            721 ;--------------------------------------------------------
                            722 ; code
                            723 ;--------------------------------------------------------
                            724 	.area CSEG    (CODE)
                            725 ;------------------------------------------------------------
                            726 ;Allocation info for local variables in function 'set_led_0'
                            727 ;------------------------------------------------------------
                            728 ;on                        Allocated to registers r2 
                            729 ;------------------------------------------------------------
                            730 ;	board_specific.c:27: set_led_0 (unsigned char on)
                            731 ;	-----------------------------------------
                            732 ;	 function set_led_0
                            733 ;	-----------------------------------------
   0000                     734 _set_led_0:
                    0002    735 	ar2 = 0x02
                    0003    736 	ar3 = 0x03
                    0004    737 	ar4 = 0x04
                    0005    738 	ar5 = 0x05
                    0006    739 	ar6 = 0x06
                    0007    740 	ar7 = 0x07
                    0000    741 	ar0 = 0x00
                    0001    742 	ar1 = 0x01
                            743 ;	genReceive
                            744 ;	board_specific.c:29: if (!on)			// active low
                            745 ;	genIfx
                            746 ;	peephole 177.g	optimized mov sequence
   0000 E5 82               747 	mov	a,dpl
   0002 FA                  748 	mov	r2,a
                            749 ;	genIfxJump
                            750 ;	Peephole 108.b	removed ljmp by inverse jump logic
   0003 70 04               751 	jnz	00102$
                            752 ;	Peephole 300	removed redundant label 00107$
                            753 ;	board_specific.c:30: USRP_PC |= bmPC_LED0;
                            754 ;	genOr
   0005 43 A0 40            755 	orl	_IOC,#0x40
                            756 ;	Peephole 112.b	changed ljmp to sjmp
                            757 ;	Peephole 251.b	replaced sjmp to ret with ret
   0008 22                  758 	ret
   0009                     759 00102$:
                            760 ;	board_specific.c:32: USRP_PC &= ~bmPC_LED0;
                            761 ;	genAnd
   0009 53 A0 BF            762 	anl	_IOC,#0xBF
                            763 ;	Peephole 300	removed redundant label 00104$
   000C 22                  764 	ret
                            765 ;------------------------------------------------------------
                            766 ;Allocation info for local variables in function 'set_led_1'
                            767 ;------------------------------------------------------------
                            768 ;on                        Allocated to registers r2 
                            769 ;------------------------------------------------------------
                            770 ;	board_specific.c:36: set_led_1 (unsigned char on)
                            771 ;	-----------------------------------------
                            772 ;	 function set_led_1
                            773 ;	-----------------------------------------
   000D                     774 _set_led_1:
                            775 ;	genReceive
                            776 ;	board_specific.c:38: if (!on)			// active low
                            777 ;	genIfx
                            778 ;	peephole 177.g	optimized mov sequence
   000D E5 82               779 	mov	a,dpl
   000F FA                  780 	mov	r2,a
                            781 ;	genIfxJump
                            782 ;	Peephole 108.b	removed ljmp by inverse jump logic
   0010 70 04               783 	jnz	00102$
                            784 ;	Peephole 300	removed redundant label 00107$
                            785 ;	board_specific.c:39: USRP_PC |= bmPC_LED1;
                            786 ;	genOr
   0012 43 A0 80            787 	orl	_IOC,#0x80
                            788 ;	Peephole 112.b	changed ljmp to sjmp
                            789 ;	Peephole 251.b	replaced sjmp to ret with ret
   0015 22                  790 	ret
   0016                     791 00102$:
                            792 ;	board_specific.c:41: USRP_PC &= ~bmPC_LED1;
                            793 ;	genAnd
   0016 53 A0 7F            794 	anl	_IOC,#0x7F
                            795 ;	Peephole 300	removed redundant label 00104$
   0019 22                  796 	ret
                            797 ;------------------------------------------------------------
                            798 ;Allocation info for local variables in function 'toggle_led_0'
                            799 ;------------------------------------------------------------
                            800 ;------------------------------------------------------------
                            801 ;	board_specific.c:45: toggle_led_0 (void)
                            802 ;	-----------------------------------------
                            803 ;	 function toggle_led_0
                            804 ;	-----------------------------------------
   001A                     805 _toggle_led_0:
                            806 ;	board_specific.c:47: USRP_PC ^= bmPC_LED0;
                            807 ;	genXor
   001A 63 A0 40            808 	xrl	_IOC,#0x40
                            809 ;	Peephole 300	removed redundant label 00101$
   001D 22                  810 	ret
                            811 ;------------------------------------------------------------
                            812 ;Allocation info for local variables in function 'toggle_led_1'
                            813 ;------------------------------------------------------------
                            814 ;------------------------------------------------------------
                            815 ;	board_specific.c:51: toggle_led_1 (void)
                            816 ;	-----------------------------------------
                            817 ;	 function toggle_led_1
                            818 ;	-----------------------------------------
   001E                     819 _toggle_led_1:
                            820 ;	board_specific.c:53: USRP_PC ^= bmPC_LED1;
                            821 ;	genXor
   001E 63 A0 80            822 	xrl	_IOC,#0x80
                            823 ;	Peephole 300	removed redundant label 00101$
   0021 22                  824 	ret
                            825 ;------------------------------------------------------------
                            826 ;Allocation info for local variables in function 'la_trace_init'
                            827 ;------------------------------------------------------------
                            828 ;------------------------------------------------------------
                            829 ;	board_specific.c:57: la_trace_init (void)
                            830 ;	-----------------------------------------
                            831 ;	 function la_trace_init
                            832 ;	-----------------------------------------
   0022                     833 _la_trace_init:
                            834 ;	board_specific.c:59: }
                            835 ;	Peephole 300	removed redundant label 00101$
   0022 22                  836 	ret
                            837 ;------------------------------------------------------------
                            838 ;Allocation info for local variables in function 'set_sleep_bits'
                            839 ;------------------------------------------------------------
                            840 ;mask                      Allocated with name '_set_sleep_bits_PARM_2'
                            841 ;bits                      Allocated to registers 
                            842 ;------------------------------------------------------------
                            843 ;	board_specific.c:62: set_sleep_bits (unsigned char bits, unsigned char mask)
                            844 ;	-----------------------------------------
                            845 ;	 function set_sleep_bits
                            846 ;	-----------------------------------------
   0023                     847 _set_sleep_bits:
                            848 ;	board_specific.c:65: }
                            849 ;	Peephole 300	removed redundant label 00101$
   0023 22                  850 	ret
                            851 ;------------------------------------------------------------
                            852 ;Allocation info for local variables in function 'write_9862'
                            853 ;------------------------------------------------------------
                            854 ;regno                     Allocated with name '_write_9862_PARM_2'
                            855 ;value                     Allocated with name '_write_9862_PARM_3'
                            856 ;which                     Allocated to registers r2 
                            857 ;------------------------------------------------------------
                            858 ;	board_specific.c:70: write_9862 (unsigned char which, unsigned char regno, unsigned char value)
                            859 ;	-----------------------------------------
                            860 ;	 function write_9862
                            861 ;	-----------------------------------------
   0024                     862 _write_9862:
                            863 ;	genReceive
   0024 AA 82               864 	mov	r2,dpl
                            865 ;	board_specific.c:72: xbuf[0] = value;
                            866 ;	genPointerSet
                            867 ;     genFarPointerSet
   0026 90s00r00            868 	mov	dptr,#_xbuf
   0029 E5*01               869 	mov	a,_write_9862_PARM_3
   002B F0                  870 	movx	@dptr,a
                            871 ;	board_specific.c:74: spi_write (0, regno & 0x3f,
                            872 ;	genAnd
   002C 74 3F               873 	mov	a,#0x3F
   002E 55*00               874 	anl	a,_write_9862_PARM_2
   0030 FB                  875 	mov	r3,a
                            876 ;	board_specific.c:75: which == 0 ? SPI_ENABLE_CODEC_A : SPI_ENABLE_CODEC_B,
                            877 ;	genNot
   0031 EA                  878 	mov	a,r2
   0032 B4 01 00            879 	cjne	a,#0x01,00106$
   0035                     880 00106$:
   0035 E4                  881 	clr	a
   0036 33                  882 	rlc	a
                            883 ;	genIfx
   0037 FA                  884 	mov	r2,a
                            885 ;	Peephole 105	removed redundant mov
                            886 ;	genIfxJump
                            887 ;	Peephole 108.c	removed ljmp by inverse jump logic
   0038 60 04               888 	jz	00103$
                            889 ;	Peephole 300	removed redundant label 00107$
                            890 ;	genAssign
   003A 7A 02               891 	mov	r2,#0x02
                            892 ;	Peephole 112.b	changed ljmp to sjmp
   003C 80 02               893 	sjmp	00104$
   003E                     894 00103$:
                            895 ;	genAssign
   003E 7A 04               896 	mov	r2,#0x04
   0040                     897 00104$:
                            898 ;	board_specific.c:77: xbuf, 1);
                            899 ;	genAssign
   0040 8B*00               900 	mov	_spi_write_PARM_2,r3
                            901 ;	genAssign
   0042 8A*00               902 	mov	_spi_write_PARM_3,r2
                            903 ;	genAssign
   0044 75*00 20            904 	mov	_spi_write_PARM_4,#0x20
                            905 ;	genAssign
   0047 75*00r00            906 	mov	_spi_write_PARM_5,#_xbuf
   004A 75*01s00            907 	mov	(_spi_write_PARM_5 + 1),#(_xbuf >> 8)
                            908 ;	genAssign
   004D 75*00 01            909 	mov	_spi_write_PARM_6,#0x01
                            910 ;	genCall
   0050 75 82 00            911 	mov	dpl,#0x00
                            912 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0053 02s00r00            913 	ljmp	_spi_write
                            914 ;
                            915 ;------------------------------------------------------------
                            916 ;Allocation info for local variables in function 'write_both_9862s'
                            917 ;------------------------------------------------------------
                            918 ;value                     Allocated with name '_write_both_9862s_PARM_2'
                            919 ;regno                     Allocated to registers r2 
                            920 ;------------------------------------------------------------
                            921 ;	board_specific.c:81: write_both_9862s (unsigned char regno, unsigned char value)
                            922 ;	-----------------------------------------
                            923 ;	 function write_both_9862s
                            924 ;	-----------------------------------------
   0056                     925 _write_both_9862s:
                            926 ;	genReceive
   0056 AA 82               927 	mov	r2,dpl
                            928 ;	board_specific.c:83: xbuf[0] = value;
                            929 ;	genPointerSet
                            930 ;     genFarPointerSet
   0058 90s00r00            931 	mov	dptr,#_xbuf
   005B E5*02               932 	mov	a,_write_both_9862s_PARM_2
   005D F0                  933 	movx	@dptr,a
                            934 ;	board_specific.c:85: spi_write (0, regno & 0x3f,
                            935 ;	genAnd
   005E 74 3F               936 	mov	a,#0x3F
   0060 5A                  937 	anl	a,r2
   0061 F5*00               938 	mov	_spi_write_PARM_2,a
                            939 ;	board_specific.c:88: xbuf, 1);
                            940 ;	genAssign
   0063 75*00 06            941 	mov	_spi_write_PARM_3,#0x06
                            942 ;	genAssign
   0066 75*00 20            943 	mov	_spi_write_PARM_4,#0x20
                            944 ;	genAssign
   0069 75*00r00            945 	mov	_spi_write_PARM_5,#_xbuf
   006C 75*01s00            946 	mov	(_spi_write_PARM_5 + 1),#(_xbuf >> 8)
                            947 ;	genAssign
   006F 75*00 01            948 	mov	_spi_write_PARM_6,#0x01
                            949 ;	genCall
   0072 75 82 00            950 	mov	dpl,#0x00
                            951 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0075 02s00r00            952 	ljmp	_spi_write
                            953 ;
                            954 ;------------------------------------------------------------
                            955 ;Allocation info for local variables in function 'power_down_9862s'
                            956 ;------------------------------------------------------------
                            957 ;------------------------------------------------------------
                            958 ;	board_specific.c:96: power_down_9862s (void)
                            959 ;	-----------------------------------------
                            960 ;	 function power_down_9862s
                            961 ;	-----------------------------------------
   0078                     962 _power_down_9862s:
                            963 ;	board_specific.c:98: write_both_9862s (REG_RX_PWR_DN,    0x01);
                            964 ;	genAssign
   0078 75*02 01            965 	mov	_write_both_9862s_PARM_2,#0x01
                            966 ;	genCall
   007B 75 82 01            967 	mov	dpl,#0x01
   007E 12s00r56            968 	lcall	_write_both_9862s
                            969 ;	board_specific.c:99: write_both_9862s (REG_TX_PWR_DN,    0x0f);	// pwr dn digital and analog_both
                            970 ;	genAssign
   0081 75*02 0F            971 	mov	_write_both_9862s_PARM_2,#0x0F
                            972 ;	genCall
   0084 75 82 08            973 	mov	dpl,#0x08
   0087 12s00r56            974 	lcall	_write_both_9862s
                            975 ;	board_specific.c:100: write_both_9862s (REG_TX_MODULATOR, 0x00);	// coarse & fine modulators disabled
                            976 ;	genAssign
   008A 75*02 00            977 	mov	_write_both_9862s_PARM_2,#0x00
                            978 ;	genCall
   008D 75 82 14            979 	mov	dpl,#0x14
                            980 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0090 02s00r56            981 	ljmp	_write_both_9862s
                            982 ;
                            983 ;------------------------------------------------------------
                            984 ;Allocation info for local variables in function 'init_board'
                            985 ;------------------------------------------------------------
                            986 ;------------------------------------------------------------
                            987 ;	board_specific.c:104: init_board (void)
                            988 ;	-----------------------------------------
                            989 ;	 function init_board
                            990 ;	-----------------------------------------
   0093                     991 _init_board:
                            992 ;	board_specific.c:106: la_trace_init ();
                            993 ;	genCall
   0093 12s00r22            994 	lcall	_la_trace_init
                            995 ;	board_specific.c:107: init_spi ();
                            996 ;	genCall
   0096 12s00r00            997 	lcall	_init_spi
                            998 ;	board_specific.c:109: USRP_PC &= ~bmPC_nRESET;	// active low reset
                            999 ;	genAnd
   0099 53 A0 FE           1000 	anl	_IOC,#0xFE
                           1001 ;	board_specific.c:110: USRP_PC |= bmPC_nRESET;
                           1002 ;	genOr
   009C 43 A0 01           1003 	orl	_IOC,#0x01
                           1004 ;	board_specific.c:112: power_down_9862s ();
                           1005 ;	genCall
                           1006 ;	Peephole 253.b	replaced lcall/ret with ljmp
   009F 02s00r78           1007 	ljmp	_power_down_9862s
                           1008 ;
                           1009 	.area CSEG    (CODE)
                           1010 	.area CONST   (CODE)
