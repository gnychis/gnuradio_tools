Index: gnuradio-core/src/lib/general/gr_rotate_cc.cc
===================================================================
--- gnuradio-core/src/lib/general/gr_rotate_cc.cc	(revision 0)
+++ gnuradio-core/src/lib/general/gr_rotate_cc.cc	(revision 0)
@@ -0,0 +1,64 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2007 Free Software Foundation, Inc.
+ * 
+ * This file is part of GNU Radio
+ * 
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ * 
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include <gr_rotate_cc.h>
+#include <gr_io_signature.h>
+#include <gr_rotator.h>
+#include <gr_expj.h>
+
+#define VERBOSE 0
+
+// Public constructor
+gr_rotate_cc_sptr
+gr_make_rotate_cc(float phase)
+{
+  return gr_rotate_cc_sptr (new gr_rotate_cc(phase));
+}
+
+gr_rotate_cc::gr_rotate_cc(float phase)
+  : gr_sync_block ("rotate_cc",
+      gr_make_io_signature (1, 1, sizeof(gr_complex)),
+      gr_make_io_signature (1, 1, sizeof(gr_complex)))
+{
+  if(VERBOSE)
+    fprintf(stderr, "[rotate_cc] Entering\n");
+
+  d_r.set_phase(gr_expj(phase));
+}
+
+int
+gr_rotate_cc::work(int noutput_items,
+                       gr_vector_const_void_star &input_items,
+                       gr_vector_void_star &output_items)
+{
+  const gr_complex *in = (const gr_complex *) input_items[0];
+  gr_complex *out = (gr_complex *) output_items[0];
+
+  for(int i = 0; i < noutput_items; i++) 
+    out[i] = d_r.rotate(in[i]);
+
+  return noutput_items;
+}
Index: gnuradio-core/src/lib/general/gr_rotate_cc.h
===================================================================
--- gnuradio-core/src/lib/general/gr_rotate_cc.h	(revision 0)
+++ gnuradio-core/src/lib/general/gr_rotate_cc.h	(revision 0)
@@ -0,0 +1,51 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2007 Free Software Foundation, Inc.
+ * 
+ * This file is part of GNU Radio
+ * 
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ * 
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifndef INCLUDED_GR_ROTATE_CC_H
+#define INCLUDED_GR_ROTATE_CC_H
+
+#include <gr_sync_block.h>
+#include <gr_rotator.h>
+#include <gr_io_signature.h>
+
+class gr_rotate_cc;
+typedef boost::shared_ptr<gr_rotate_cc> gr_rotate_cc_sptr;
+
+gr_rotate_cc_sptr
+gr_make_rotate_cc (float phase);
+
+class gr_rotate_cc : public gr_sync_block
+{
+  friend gr_rotate_cc_sptr gr_make_rotate_cc (float phase);
+
+  gr_rotate_cc(float phase);
+
+  gr_rotator d_r;
+
+public:
+  
+  int work (int noutput_items,
+	    gr_vector_const_void_star &input_items,
+	    gr_vector_void_star &output_items);
+};
+
+#endif
Index: gnuradio-core/src/lib/general/gr_rotate_cc.i
===================================================================
--- gnuradio-core/src/lib/general/gr_rotate_cc.i	(revision 0)
+++ gnuradio-core/src/lib/general/gr_rotate_cc.i	(revision 0)
@@ -0,0 +1,32 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2007 Free Software Foundation, Inc.
+ * 
+ * This file is part of GNU Radio
+ * 
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ * 
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+GR_SWIG_BLOCK_MAGIC(gr,rotate_cc)
+  
+gr_rotate_cc_sptr 
+gr_make_rotate_cc (float phase);
+
+class gr_rotate_cc : public gr_sync_block
+{
+ private:
+  gr_rotate_cc (float phase);
+}; 
Index: gnuradio-core/src/lib/general/Makefile.am
===================================================================
--- gnuradio-core/src/lib/general/Makefile.am	(revision 7535)
+++ gnuradio-core/src/lib/general/Makefile.am	(working copy)
@@ -130,6 +130,7 @@
 	gr_reverse.cc			\
 	gr_rms_cf.cc			\
 	gr_rms_ff.cc			\
+	gr_rotate_cc.cc			\
 	gr_short_to_float.cc		\
 	gr_simple_correlator.cc		\
 	gr_simple_framer.cc		\
@@ -275,6 +276,7 @@
 	gr_reverse.h			\
 	gr_rms_cf.h			\
 	gr_rms_ff.h			\
+	gr_rotate_cc.h			\
 	gr_short_to_float.h		\
 	gr_simple_correlator.h		\
 	gr_simple_framer.h		\
@@ -419,6 +421,7 @@
 	gr_remez.i			\
 	gr_rms_cf.i			\
 	gr_rms_ff.i			\
+	gr_rotate_cc.i			\
 	gr_short_to_float.i		\
 	gr_simple_correlator.i		\
 	gr_simple_framer.i		\
Index: gnuradio-core/src/lib/general/general.i
===================================================================
--- gnuradio-core/src/lib/general/general.i	(revision 7535)
+++ gnuradio-core/src/lib/general/general.i	(working copy)
@@ -65,6 +65,7 @@
 #include <gr_agc2_cc.h>
 #include <gr_rms_cf.h>
 #include <gr_rms_ff.h>
+#include <gr_rotate_cc.h>
 #include <gr_nlog10_ff.h>
 #include <gr_fake_channel_coder_pp.h>
 #include <gr_throttle.h>
@@ -174,6 +175,7 @@
 %include "gr_agc2_cc.i"
 %include "gr_rms_cf.i"
 %include "gr_rms_ff.i"
+%include "gr_rotate_cc.i"
 %include "gr_nlog10_ff.i"
 %include "gr_fake_channel_coder_pp.i"
 %include "gr_throttle.i"
